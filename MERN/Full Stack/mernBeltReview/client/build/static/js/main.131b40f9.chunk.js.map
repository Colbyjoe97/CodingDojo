{"version":3,"sources":["components/Dashboard.js","components/NewStudent.js","components/DisplayStudent.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","useState","students","setStudents","someoneLeveledUp","setSomeoneLeveledUp","useEffect","Axios","get","then","response","console","log","data","results","catch","err","levelUp","e","student","beltColor","firstName","put","_id","beltLevel","res","className","filter","i","toLowerCase","map","style","backgroundColor","to","lastName","graduationDate","onClick","color","NewStudent","nickName","imageUrl","isVeteran","isPartTime","setStudent","errors","setErrors","changeHandler","target","name","type","checked","value","onSubmit","preventDefault","post","navigate","message","onChange","DisplayStudent","props","id","src","alt","height","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.131b40f9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { Link } from '@reach/router'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [students, setStudents] = useState([])\r\n    const [someoneLeveledUp, setSomeoneLeveledUp] = useState(false)\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:8000/api/students\")\r\n            .then(response => {\r\n                console.log(\"************\", response)\r\n                setStudents(response.data.results)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [someoneLeveledUp])\r\n\r\n    const levelUp = (e, student, beltColor)=> {\r\n        console.log(`${student.firstName} is leveling up to a ${beltColor} belt!`, student)\r\n        Axios.put(`http://localhost:8000/api/students/update/${student._id}`, {beltLevel: beltColor})\r\n            .then(res => {\r\n                console.log(\"Response on update: \", res)\r\n                setSomeoneLeveledUp(true)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Error on update: \", err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Here are all the Ninjas</h3><br></br>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h3>Yellow Belters</h3>\r\n                    {students.filter((student, i) => {\r\n                            return student.beltLevel.toLowerCase() === \"yellow\"\r\n                        }).map((student, i) => {\r\n                            return (\r\n                                <div className=\"card\" style={{backgroundColor: \"yellow\"}} key={i}>\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\"><Link to={`/students/info/${student._id}`}>{student.firstName} {student.lastName}</Link></h4>\r\n                                        <p>Graduation Date: {student.graduationDate}</p>\r\n                                        <p>Belt Level: {student.beltLevel}</p>\r\n                                        <button className=\"btn btn-danger\" onClick={(e)=>levelUp(e, student, \"red\")}>Earn Red Belt</button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <h3>Red Belters</h3>\r\n                    {students.filter((student, i) => {\r\n                            return student.beltLevel.toLowerCase() === \"red\"\r\n                        }).map((student, i) => {\r\n                            return (\r\n                                <div className=\"card\" style={{backgroundColor: \"red\", color: \"white\"}} key={i}>\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\"><Link to={`/students/info/${student._id}`}>{student.firstName} {student.lastName}</Link></h4>\r\n                                        <p>Graduation Date: {student.graduationDate}</p>\r\n                                        <p>Belt Level: {student.beltLevel}</p>\r\n                                        <button className=\"btn btn-dark\" onClick={(e)=>levelUp(e, student, \"black\")}>Earn Black Belt</button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <h3>Black Belters</h3>\r\n                    {students.filter((student, i) => {\r\n                            return student.beltLevel.toLowerCase() === \"black\"\r\n                        }).map((student, i) => {\r\n                            return (\r\n                                <div className=\"card\" style={{backgroundColor: \"black\", color: \"white\"}} key={i}>\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\"><Link to={`/students/info/${student._id}`}>{student.firstName} {student.lastName}</Link></h4>\r\n                                        <p>Graduation Date: {student.graduationDate}</p>\r\n                                        <p>Belt Level: {student.beltLevel}</p>\r\n                                        <button className=\"btn btn-success\" onClick={(e)=>levelUp(e, student, \"alumni\")}>Graduate</button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <h3>Alumni</h3>\r\n                    {students.filter((student, i) => {\r\n                            return student.beltLevel.toLowerCase() === \"alumni\"\r\n                        }).map((student, i) => {\r\n                            return (\r\n                                <div className=\"card\" style={{backgroundColor: \"green\", color: \"white\"}} key={i}>\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\"><Link to={`/students/info/${student._id}`}>{student.firstName} {student.lastName}</Link></h4>\r\n                                        <p>Graduation Date: {student.graduationDate}</p>\r\n                                        <p>Belt Level: {student.beltLevel}</p>\r\n                                        <button className=\"btn btn-success\" onClick={(e)=>levelUp(e, student, \"yellow\")}>Graduate</button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { navigate } from '@reach/router'\r\n\r\nconst NewStudent = () => {\r\n\r\n    const [student, setStudent] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        nickName: \"\",\r\n        imageUrl: \"\",\r\n        graduationDate: \"\",\r\n        isVeteran: false,\r\n        isPartTime: false\r\n    })\r\n\r\n    const [errors, setErrors] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        imageUrl: \"\",\r\n        graduationDate: \"\"\r\n    })\r\n\r\n    const changeHandler = e => {\r\n        console.log(\"Typing some inputs on \", e.target.name)\r\n        if(e.target.type === \"checkbox\") {\r\n            setStudent(({\r\n                ...student,\r\n                [e.target.name]: e.target.checked\r\n            }))\r\n        }\r\n        else {\r\n            setStudent({\r\n                ...student,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        Axios.post(\"http://localhost:8000/api/students/create\", student)\r\n            .then(res => {\r\n                if(res.data.results) {\r\n                    navigate(\"/\")\r\n                }\r\n                else {\r\n                    console.log(res)\r\n                    console.log(\"Form info is not valid\")\r\n                    console.log(res.data.errors)\r\n                    setErrors(res.data.errors)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Errors on submit: \", err)\r\n            })\r\n        }\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center\">Enroll a student</h1>\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"form-group\">\r\n                    <span className=\"text-danger\">{errors.firstName? errors.firstName.message : \"\"}</span><br></br>\r\n                    <label>First Name:</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"firstName\" onChange={changeHandler}/><br></br>\r\n\r\n                    <span className=\"text-danger\">{errors.lastName? errors.lastName.message : \"\"}</span><br></br>\r\n                    <label>Last Name:</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"lastName\" onChange={changeHandler}/><br></br>\r\n\r\n                    <label>Nickname:</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"nickName\" onChange={changeHandler}/><br></br>\r\n\r\n                    <span className=\"text-danger\">{errors.imageUrl? errors.imageUrl.message : \"\"}</span><br></br>\r\n                    <label>Picture:</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"imageUrl\" onChange={changeHandler}/><br></br>\r\n\r\n                    <span className=\"text-danger\">{errors.graduationDate? errors.graduationDate.message : \"\"}</span><br></br>\r\n                    <label>Graduation Date:</label>\r\n                    <input type=\"date\" className=\"form-control\" name=\"graduationDate\" onChange={changeHandler}/><br></br>\r\n\r\n                    <label>Veteran:</label>\r\n                    <input type=\"checkbox\" className=\"ml-2 mr-5\" name=\"isVeteran\" onChange={changeHandler}/>\r\n\r\n                    <label>Part Time:</label>\r\n                    <input type=\"checkbox\" className=\"ml-2\" name=\"isPartTime\" onChange={changeHandler}/><br></br>\r\n\r\n                    <div className=\"text-center\">\r\n                        <input className=\"btn btn-success\" type=\"submit\" value=\"Create Student\" />\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default NewStudent","import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { Link } from '@reach/router'\r\n\r\nconst DisplayStudent = (props) => {\r\n\r\n    const [student, setStudent] = useState({})\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8000/api/students/${props.id}`)\r\n            .then(res => {\r\n                console.log(\"Response from viewing 1: \", res)\r\n                setStudent(res.data.results)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Errors from viewing 1: \", err)\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Info about {student.firstName} {student.lastName} </h1>\r\n            <p>{student.nickName? `Also known as: ${student.nickName}`: \"\"}</p>\r\n            <p>{student.graduationDate}</p>\r\n            <p>{student.beltLevel}</p>\r\n            <p>{student.isVeteran? \"Veteran\": \"Non-Veteran\"}</p>\r\n            <p>{student.isPartTime? \"Part-Time\": \"Full-Time\"}</p>\r\n            <img src={student.imageUrl} alt=\"\" height=\"100px\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayStudent","import './App.css';\nimport { Router, Link } from '@reach/router'\nimport Dashboard from './components/Dashboard'\nimport NewStudent from './components/NewStudent'\nimport DisplayStudent from './components/DisplayStudent'\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\">\n        <h1 className=\"text-success\">All the ninjas of the dojo</h1>\n        <Link to=\"/\" className=\"btn btn-primary m-2\">Home</Link>\n        <Link to=\"/students/new\" className=\"btn btn-secondary \">Create Student</Link>\n      </div>\n        <Router>\n          <Dashboard path=\"/\"></Dashboard>\n          <NewStudent path=\"/students/new\" />\n          <DisplayStudent path=\"/students/info/:id\" />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}